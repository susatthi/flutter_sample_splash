name: flutter_sample_splash
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.16.1 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  flutter_native_splash: ^2.1.3+1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^1.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

flutter_native_splash:
  color: '#add8e6'

  # Android11 アスペクト比が維持されない
  # Android12 非対応
  # iOS アスペクト比が維持されない
#  background_image: 'assets/images/background.png'

  # android
  # original=1600, 4000
  # xxxhdpi =1600, 4000
  # xxhdpi  =1200, 3000
  # xhdpi   = 800, 2000
  # hdpi    = 600, 1500
  # mdpi    = 400, 1000
  # 縦横サイズが大きすぎると、画面をはみ出てしまうのでサイズは注意が必要
  # 1200が良い感じ
  image: 'assets/images/splash.png'

  # ダークモードには対応する
  color_dark: '#262626'
  image_dark: 'assets/images/splash.png'

  # Android12以上はAndroidOS側でアプリアイコンをスプラッシュ表示してしまうので以下の通り設定が必要
  #  指定がないと、代わりにアプリ起動アイコンが使用される
  #  画面中央の円型に切り取られる。
  #  背景付き画像の場合、960x960pxで、直径640pxの円の中に収まる必要がある
  #  背景なし画像の場合、1152x1152pxで、直径768pxの円の中に収まる必要がある
  android_12:
    icon_background_color: '#add8e6'
    image: 'assets/images/splash_android12.png'
    icon_background_color_dark: '#262626'
    image_dark: 'assets/images/splash_android12.png'

  # ブランディング
  # Android12は動かないはずだが動いた
#  branding: 'assets/images/branding.png'
#  branding_dark: 'assets/images/branding.png'
#  branding_mode: bottom

  # android_gravityはAndroid12から効かなくなってる（Android11以下まで）
#  android_gravity: bottom
#  android_gravity: center
#  android_gravity: center_horizontal
#  android_gravity: center_vertical
#  android_gravity: clip_horizontal
#  android_gravity: clip_vertical
#  android_gravity: end
#  android_gravity: fill
#  android_gravity: fill_horizontal
#  android_gravity: fill_vertical
#  android_gravity: left
#  android_gravity: right
#  android_gravity: start
#  android_gravity: top

#  ios_content_mode: scaleToFill # できた アスペクト比を保たず全画面表示
#  ios_content_mode: scaleAspectFit #できた アスペクト比を保って横幅いっぱいに表示
#  ios_content_mode: scaleAspectFill # できた アスペクト比をたもって全画面表示（周りが切り取られる）
#  ios_content_mode: center #できた センター表示 デフォルト
#  ios_content_mode: top #できた
#  ios_content_mode: bottom #できた
#  ios_content_mode: left #できた
#  ios_content_mode: right #できた
#  ios_content_mode: topLeft # おかしい、拡大表示された
#  ios_content_mode: topRight #できた
#  ios_content_mode: bottomLeft #できた
#  ios_content_mode: bottomRight #できた

#  web_image_mode: center # デフォルト
#  web_image_mode: contain # できた　scaleAspectFit　と同じ
#  web_image_mode: stretch # できた scaleAspectFillと同じ
#  web_image_mode: cover # できた

  # デフォルトは false
  # webでは動作しない（NotificationBarが無いので）
  #Androidとは異なり、iOSはアプリの読み込み時に通知バーを自動的に表示しません。
  #通知バーを表示するには、Flutterアプリに次のコードを追加します。
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  # iOS ちゃんと動いた
  # Android 11 ちゃんと動いた
  # Android 12 動かない
  fullscreen: true
